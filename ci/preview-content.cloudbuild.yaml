steps:
  - id: 'Stage FirebaseConfig'
    name: 'bash'
    env:
      - 'PROJECT_ID=$PROJECT_ID'
    script: |
      # Copy correct Firestore config per project
      cp -v ci/firebase-config.${PROJECT_ID}.js /workspace/hugo/static/js/firebase-config.js

  - id: 'Svelte / Hugo Build'
    name: 'node'
    script: |
      #! /usr/bin/env bash

      # Build Quick Check and move generated files into position
      echo "Using Node version $(node --version)"
      ./svelte/quick-check-2023/build-quick-check.sh

      # Build Core Model and move generated files into position
      ./svelte/core-v2/build-core.sh

      # install hugo "extended"
      HUGO_VERSION=0.114.1
      wget https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb -O /tmp/hugo.deb

      apt install /tmp/hugo.deb

      # Build site w/ drafts
      hugo --source=./hugo --destination=/workspace/hugo/public_drafts_on --logLevel=debug --buildDrafts

      # Build site w/o drafts
      hugo --source=./hugo --destination=/workspace/hugo/public_drafts_off --logLevel=debug

  - id: 'Firebase Deploy'
    name: gcr.io/$PROJECT_ID/firebase
    env:
      - '_PR_NUMBER=$_PR_NUMBER'
      - 'PROJECT_ID=$PROJECT_ID'
    script: |
      echo "Using firebase version: "$(firebase --version)
      
      # Create text file to be posted to PR message
      echo "Cloud Build time: $(date)" > /workspace/gh-pr-comment-message.txt

      for DRAFTS_MODE in "on" "off"; do
        PREVIEW_CHANNEL="pr${_PR_NUMBER}_drafts-${DRAFTS_MODE}"
        
        # move draft version of site into "public" folder
        mkdir -p /workspace/hugo/public
        rm -rf /workspace/hugo/public/*
        cp -R /workspace/hugo/public_drafts_${DRAFTS_MODE}/* /workspace/hugo/public/

        # deploy
        firebase hosting:channel:deploy ${PREVIEW_CHANNEL} --project=${PROJECT_ID}

        # get the url of this preview channel
        # (it returns in format `i  hosting:channel: https://<url>`)
        CHANNEL_DATA="$(firebase hosting:channel:open ${PREVIEW_CHANNEL} --project=${PROJECT_ID})"

        # extract the URL from the channel data
        touch /workspace/preview-url-drafts-${DRAFTS_MODE}.txt
        echo "${CHANNEL_DATA##* }" > /workspace/preview-url-drafts-${DRAFTS_MODE}.txt

        echo "Preview this PR [with drafts ${DRAFTS_MODE}] at $(cat /workspace/preview-url-drafts-${DRAFTS_MODE}.txt)" >> /workspace/gh-pr-comment-message.txt
      done

      cat /workspace/gh-pr-comment-message.txt

  - id: 'Playwright tests'
    name: mcr.microsoft.com/playwright:v1.43.0-jammy
    env:
    - 'CI=true'
    script: |
      cd test/playwright
      npm ci
      npx playwright install --with-deps
      PLAYWRIGHT_BASE_URL=$(cat /workspace/preview-url-drafts-on.txt) npx playwright test

  - id: 'Write PR URL back to github'
    name: 'bash'
    env:
    - '_PR_NUMBER=$_PR_NUMBER'
    - 'REPO_FULL_NAME=$REPO_FULL_NAME'
    script: |
      # install github cli
      apk update && apk add github-cli

      gh version

      # authenticate
      set +x
      echo "$GH_TOKEN" > .githubtoken
      set -x
      unset GH_TOKEN
      gh auth login --with-token < .githubtoken

      # add preview URLs as comment.
      gh pr comment ${_PR_NUMBER} --repo=${REPO_FULL_NAME} --edit-last --body-file /workspace/gh-pr-comment-message.txt
      if [ $? -ne 0 ]; then
        gh pr comment $_PR_NUMBER --repo=${REPO_FULL_NAME} --body-file /workspace/gh-pr-comment-message.txt
      fi

    secretEnv: ['GH_TOKEN']

availableSecrets:
  secretManager:
  - versionName: projects/$PROJECT_ID/secrets/github_token/versions/latest
    env: 'GH_TOKEN'

logsBucket: 'doradotdev-cloudbuild-logs'